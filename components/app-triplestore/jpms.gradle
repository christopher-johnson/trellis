apply plugin: 'osgi'
apply plugin: 'com.zyxist.chainsaw'

description = 'Trellis App Triplestore'

ext {
    javaModuleName = 'org.trellisldp.jpms.app.triplestore'
    osgiModuleName = 'org.trellisldp.app.triplestore'
}

javaModule {
    name = javaModuleName
    extraTestModules = ['org.trellisldp.jpms.test','org.apache.jena.rdfconnection']
    hacks {
        patches('org.apache.geronimo.specs:geronimo-jms_1.1_spec', 'javax.jms:javax.jms-api')
        patches('org.hamcrest:hamcrest-library', 'org.hamcrest:hamcrest-core')
        //patches('io.dropwizard:dropwizard-logging', 'ch.qos.logback:logback-core')
    }
}

dependencies {
    patch "org.hamcrest:hamcrest-library:$hamcrestLibraryVersion"
    patch "org.apache.geronimo.specs:geronimo-jms_1.1_spec:$geronimoJmsSpecVersion"

    compile("com.github.jsonld-java:jsonld-java:$jsonldVersion") {force = true}
    compile("com.google.guava:guava:$guavaVersion")
    compile("commons-codec:commons-codec:$commonsCodecVersion")
    compile("io.dropwizard:dropwizard-auth:$dropwizardVersion")
    compile("io.dropwizard:dropwizard-core:$dropwizardVersion")
    compile("io.dropwizard:dropwizard-metrics:$dropwizardVersion")
    compile("io.dropwizard:dropwizard-http2:$dropwizardVersion")
    compile("io.jsonwebtoken:jjwt:$jwtVersion")
    compile("javax.activation:javax.activation-api:$activationApiVersion")
    compile("javax.jms:javax.jms-api:$jmsApiVersion")
    compile ("javax.xml.bind:jaxb-api:$jaxbVersion")
    compile("org.apache.commons:commons-rdf-jena-jpms:$commonsRdfJenaVersion")
    compile("org.apache.httpcomponents:httpclient:$httpclientVersion")
    compile("org.apache.httpcomponents:httpclient-cache:$httpclientVersion")
    compile("org.apache.jena:jena.arq-jpms:$jenaVersion")
    compile("org.apache.jena:jena.base-jpms:$jenaVersion")
    compile("org.apache.jena:jena.core-jpms:$jenaVersion")
    compile("org.apache.jena:jena.dboe-jpms:$jenaVersion")
    compile("org.apache.jena:jena.rdfconnection-jpms:$jenaVersion")
    compile("org.apache.thrift:libthrift:$thriftVersion")
    compile("org.apache.servicemix.bundles:org.apache.servicemix.bundles.xerces:$servicemixXercesVersion")
    compile("org.eclipse.jetty:jetty-alpn-java-server:$jettyAlpnServerVersion")
    compile("org.slf4j:slf4j-api:$slf4jVersion")

    compile("org.trellisldp:trellis-agent-jpms:$version")
    compile("org.trellisldp:trellis-api-jpms:$version")
    compile("org.trellisldp:trellis-app-jpms:$version")
    compile("org.trellisldp:trellis-audit-jpms:$version")
    compile("org.trellisldp:trellis-constraint-rules-jpms:$version")
    compile("org.trellisldp:trellis-event-serialization-jpms:$version")
    compile("org.trellisldp:trellis-file-jpms:$version")
    compile("org.trellisldp:trellis-http-jpms:$version")
    compile("org.trellisldp:trellis-id-jpms:$version")
    compile("org.trellisldp:trellis-io-jena-jpms:$version")
    //compile("org.trellisldp:trellis-jms-jpms:$version")
    compile("org.trellisldp:trellis-kafka-jpms:$version")
    compile("org.trellisldp:trellis-namespaces-jpms:$version")
    compile("org.trellisldp:trellis-triplestore-jpms:$version")
    compile("org.trellisldp:trellis-vocabulary-jpms:$version")
    compile("org.trellisldp:trellis-webac-jpms:$version")

    testCompile("com.github.andrewoma.dexx:collection:$dexxCollectionVersion")
    testCompile("com.github.jsonld-java:jsonld-java:$jsonldVersion") {force = true}
    testCompile("io.dropwizard:dropwizard-client:$dropwizardVersion")
    testCompile("io.dropwizard:dropwizard-testing:$dropwizardVersion")
    testCompile("org.apache.httpcomponents:httpclient-cache:$httpclientVersion")
    testCompile("org.apache.tamaya:tamaya-core:$tamayaVersion")
    testCompile("org.awaitility:awaitility:$awaitilityVersion")
    testCompile("ch.qos.logback:logback-classic:$logbackVersion")
    testCompile("org.mockito:mockito-core:$mockitoVersion")
    testCompile("org.apache.thrift:libthrift:$thriftVersion")
    testCompile project(':trellis-test-jpms')
}

jar {
    manifest {
        description project.description
        vendor project.vendor
        license project.license

        instruction 'Automatic-Module-Name', javaModuleName
        instruction 'Import-Package', '*'
        instruction 'Export-Package', "$osgiModuleName;version=$projectOsgiVersion"
        instruction 'Require-Capability', "$osgiEeJavaVersion"
    }
}