apply plugin: 'osgi'
apply plugin: 'com.zyxist.chainsaw'

description = 'Trellis Triplestore'

ext {
    javaModuleName = 'org.trellisldp.jpms.triplestore'
    osgiModuleName = 'org.trellisldp.triplestore'
}

javaModule {
    name = javaModuleName
    extraTestModules = ['org.trellisldp.jpms.id', 'org.trellisldp.jpms.test', 'org.apache.commons.rdf.jena']
    hacks {
        patches('org.hamcrest:hamcrest.library', 'org.hamcrest:hamcrest.core')
    }
}

dependencies {
    patch "org.hamcrest:hamcrest-library:$hamcrestLibraryVersion"

    api("org.apache.commons:commons-rdf-api:$commonsRdfVersion")
    api("org.glassfish.hk2.external:javax.inject:$javaxInjectVersion")
    api("org.trellisldp:trellis-api-jpms:$version")
    api("org.trellisldp:trellis-audit-jpms:$version")

    implementation ("commons-io:commons-io:$commonsIoVersion") {force = true}
    implementation("de.ubleipzig:jena.arq-jpms:$jenaVersion")
    implementation("de.ubleipzig:jena.base-jpms:$jenaVersion")
    implementation("de.ubleipzig:jena.core-jpms:$jenaVersion")
    implementation("de.ubleipzig:jena.rdfconnection-jpms:$jenaVersion")
    implementation("de.ubleipzig:commons-rdf-jena-jpms:$commonsRdfJenaVersion")
    implementation("org.slf4j:slf4j-api:$slf4jVersion")
    implementation("org.trellisldp:trellis-http-jpms:$version")
    implementation("org.trellisldp:trellis-vocabulary-jpms:$version")

    testImplementation("ch.qos.logback:logback-classic:$logbackVersion")
    testImplementation("org.awaitility:awaitility:$awaitilityVersion")
    testImplementation("org.mockito:mockito-core:$mockitoVersion")
    testImplementation("org.trellisldp:trellis-id-jpms:$version")
    testImplementation project(':trellis-test-jpms')

}

jar {
    manifest {
        description project.description
        docURL project.docURL
        vendor project.vendor
        license project.license

        instruction 'Automatic-Module-Name', javaModuleName
        instruction 'Import-Package', '*'
        instruction 'Export-Package', "$osgiModuleName;version=$projectOsgiVersion"
        instruction 'Require-Capability', "$osgiEeJavaVersion"
    }
}

