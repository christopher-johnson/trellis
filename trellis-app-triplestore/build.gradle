apply plugin: 'java'
apply plugin: 'distribution'
apply plugin: 'application'

description = 'Trellis Triplestore Application'
mainClassName = 'org.trellisldp.app.triplestore.TrellisApplication'
applicationName = 'trellis'

javaModule {
    name = 'org.trellisldp.app.triplestore'
    extraTestModules = ['org.trellisldp.test','org.apache.jena.rdfconnection']
    hacks {
        patches('com.google.code.findbugs:jsr305', 'javax.annotation:jsr250-api')
        patches('org.apache.geronimo.specs:geronimo-jms_1.1_spec', 'javax.jms:javax.jms-api')
        patches('org.hamcrest:hamcrest-library', 'org.hamcrest:hamcrest-core')
        //patches('io.dropwizard:dropwizard-logging', 'ch.qos.logback:logback-core')
    }
}

dependencies {
    patch "org.hamcrest:hamcrest-library:$hamcrestLibraryVersion"
    patch "com.google.code.findbugs:jsr305:$jsr305Version"
    patch "org.apache.geronimo.specs:geronimo-jms_1.1_spec:$geronimoJmsSpecVersion"

    implementation("com.github.jsonld-java:jsonld-java:$jsonldVersion") {force = true}
    implementation("commons-codec:commons-codec:$commonsCodecVersion")
    implementation("io.dropwizard:dropwizard-auth:$dropwizardVersion")
    implementation("io.dropwizard:dropwizard-core:$dropwizardVersion")
    implementation("io.dropwizard:dropwizard-metrics:$dropwizardVersion")
    implementation("io.dropwizard:dropwizard-http2:$dropwizardVersion")
    implementation("io.jsonwebtoken:jjwt:$jwtVersion")
    implementation("javax.activation:javax.activation-api:$activationApiVersion")
    implementation("javax.jms:javax.jms-api:$jmsApiVersion")
    implementation("org.eclipse.jetty:jetty-alpn-java-server:$jettyAlpnServerVersion")
    implementation("org.apache.commons:commons-rdf-jena:$commonsRdfVersion")
    implementation("org.apache.httpcomponents:httpclient:$httpclientVersion")
    implementation("org.apache.httpcomponents:httpclient-cache:$httpclientVersion")
    implementation("org.apache.jena:jena-arq:$jenaArqVersion")
    implementation("org.apache.jena:jena-core:$jenaVersion")
    implementation("org.apache.jena:jena-rdfconnection:$jenaRdfConnectionVersion")
    implementation("org.apache.jena:jena-tdb2:$jenaVersion")
    implementation("org.apache.thrift:libthrift:$thriftVersion")
    implementation("org.slf4j:slf4j-api:$slf4jVersion")

    implementation project(':trellis-constraint-rules')
    implementation project(':trellis-io-jena')
    implementation project(':trellis-id')
    implementation project(':trellis-api')
    implementation project(':trellis-http')
    implementation project(':trellis-vocabulary')
    implementation project(':trellis-file')
    implementation project(':trellis-namespaces')
    implementation project(':trellis-agent')
    implementation project(':trellis-audit')
    implementation project(':trellis-event-serialization')
    implementation project(':trellis-webac')
    implementation project(':trellis-triplestore')
    implementation project(':trellis-jms')
    implementation project(':trellis-kafka')
    implementation project(':trellis-app')

    runtime ("javax.xml.bind:jaxb-api:$jaxbVersion")

    testImplementation("com.github.jsonld-java:jsonld-java:$jsonldVersion") {force = true}
    testImplementation("io.dropwizard:dropwizard-client:$dropwizardVersion")
    testImplementation("io.dropwizard:dropwizard-testing:$dropwizardVersion")
    testImplementation("org.apache.httpcomponents:httpclient-cache:$httpclientVersion")
    testImplementation("org.apache.tamaya:tamaya-core:$tamayaVersion")
    testImplementation("org.awaitility:awaitility:$awaitilityVersion")
    testImplementation("ch.qos.logback:logback-classic:$logbackVersion")
    testImplementation("org.mockito:mockito-core:$mockitoVersion")
    testImplementation("org.apache.thrift:libthrift:$thriftVersion")
    testImplementation project(':trellis-test')
}

uploadArchives {
    // There is no need to store these artifacts on maven central
    enabled = false
}

task copyDistTask(type: Copy) {
    from 'LICENSE'
    into 'src/dist'
}

assembleDist.dependsOn copyDistTask

