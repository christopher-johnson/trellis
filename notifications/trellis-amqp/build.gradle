apply plugin: 'osgi'
apply plugin: 'com.zyxist.chainsaw'

description = 'Trellis Notifications (AMQP)'

ext {
    moduleName = 'org.trellisldp.amqp'

}

javaModule {
    name = 'org.trellisldp.amqp'
    extraTestModules = ['org.trellisldp.vocabulary']
}

dependencies {

    api group: 'com.rabbitmq', name: 'amqp-client', version: rabbitMqVersion
    api group: 'org.glassfish.hk2.external', name: 'javax.inject', version: javaxInjectVersion
    api project(':trellis-api')

    implementation group: 'org.apache.tamaya', name: 'tamaya-api', version: tamayaVersion
    implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion

    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
    testImplementation group: 'org.apache.commons', name: 'commons-rdf-simple', version: commonsRdfVersion
    testImplementation group: 'org.apache.tamaya', name: 'tamaya-core', version: tamayaVersion
    testImplementation group: 'org.apiguardian', name: 'apiguardian-api', version: apiguardianVersion
    testImplementation group: 'javax.annotation', name: 'javax.annotation-api', version: javaxAnnotationsVersion
    testImplementation group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
    testImplementation project(':trellis-event-serialization')
    testImplementation project(':trellis-vocabulary')
}

jar {
    manifest {
        description project.description
        docURL project.docURL
        vendor project.vendor
        license project.license

        instruction 'Automatic-Module-Name', moduleName
        instruction 'Import-Package', '*'
        instruction 'Export-Package', "${moduleName};version=${projectOsgiVersion}"
        instruction 'Require-Capability', '''\
            osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)",
            osgi.serviceloader;
                filter:="(osgi.serviceloader=org.trellisldp.api.ActivityStreamService)";
                resolution:=mandatory; cardinality:=mandatory
            '''
    }
}

