apply plugin: 'osgi'
apply plugin: 'com.zyxist.chainsaw'

description = 'Trellis Vocabularies'

ext {
    moduleName = 'org.trellisldp.vocabulary'
}

javaModule.name = 'org.trellisldp.vocabulary'
javaModule.extraTestModules = ['org.mockito']

javaModule.patchModules 'org.apache.httpcomponents:httpclient-osgi':'commons-codec:commons-codec'
javaModule.patchModules 'xerces:xercesImpl':'org.apache.servicemix.bundles:org.apache.servicemix.bundles.xerces'
javaModule.patchModules 'xml-apis:xml-apis':'xerces:xercesImpl'

dependencies {
    patch 'org.apache.httpcomponents:httpclient-osgi:4.5.3'
    patch 'org.apache.servicemix.bundles:org.apache.servicemix.bundles.xerces:2.11.0_1'
    patch 'xml-apis:xml-apis:1.4.01'

    api group: 'org.apache.commons', name: 'commons-rdf-api', version: commonsRdfVersion

    testImplementation group: 'org.apache.commons', name: 'commons-rdf-jena', version: commonsRdfVersion
    testImplementation group: 'org.apache.jena', name: 'jena-osgi', version: jenaVersion
    testImplementation group: 'org.apiguardian', name: 'apiguardian-api', version: apiguardianVersion
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
    testImplementation group: 'org.junit.platform', name: 'junit-platform-runner', version: junitPlatformVersion
    testImplementation group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
    testImplementation group: 'xerces', name: 'xercesImpl', version: xercesVersion

    testRuntimeClasspath group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
}

jar {
    manifest {
        description project.description
        docURL project.docURL
        vendor project.vendor
        license project.license

        instruction 'Automatic-Module-Name', moduleName
        instruction 'Import-Package', '*'
        instruction 'Export-Package', "${moduleName};version=${projectOsgiVersion}"
        instruction 'Require-Capability', '''\
            osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)",
            osgi.serviceloader;
                filter:="(osgi.serviceloader=org.apache.commons.rdf.api.RDF)";
                resolution:=mandatory; cardinality:=at_least_one
            '''
    }
}

